C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 16:43:14 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Source\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "delay.h"
   3          #include "iic.h"
   4          #include "lcd1602.h"
   5          #include "pcf8591.h"
   6          #include "timer.h"
   7          #include <math.h>
   8          
   9          void main(void)
  10          {
  11   1      
  12   1        //! 去 timer.c 看中断处理程序
  13   1        // Init_T0_MODE1(); // 初始化定时器
  14   1        float x1;
  15   1        float temp;
  16   1        unsigned char i;
  17   1        while (1)
  18   1        {
  19   2          /**
  20   2           * 心形公式：
  21   2           * f(x) = ( 1 - (|x| -1)^2 )^(1/2)
  22   2           * g(x) = 1/cos(1- |x|) - 3
  23   2           *
  24   2           * f(x) + 3：
  25   2           * g(x) + 3：
  26   2           */
  27   2          x1 = 2.00;
  28   2          for (i = 1; i < 100; i++)
  29   2          {
  30   3            x1 = x1 - 0.02;
  31   3            temp = acos(1.0 - x1) * 50.0;
  32   3            IIC_Write_DAC((unsigned char)temp);
  33   3            temp = sqrt(1 - (x1 - 1) * (x1 - 1)) + 3.0;
  34   3            temp = temp * 50.0;
  35   3            IIC_Write_DAC((unsigned char)temp);
  36   3          }
  37   2      
  38   2          x1 = 0.0;
  39   2          for (i = 1; i < 100; i++)
  40   2          {
  41   3            x1 = x1 + 0.02;
  42   3            temp = acos(1.0 - x1) * 50.0;
  43   3            IIC_Write_DAC((unsigned char)temp);
  44   3            temp = sqrt(1 - (x1 - 1) * (x1 - 1)) + 3.0;
  45   3            temp = temp * 50.0;
  46   3            IIC_Write_DAC((unsigned char)temp);
  47   3          }
  48   2      
  49   2          DelayXms(100);
  50   2        }
  51   1      }
  52          
  53          /**
  54           * @brief 测试 IIC 通信的一个 main 函数
C51 COMPILER V9.60.0.0   MAIN                                                              03/26/2022 16:43:14 PAGE 2   

  55           *
  56           * 主要是把 pcf8591 检测到的 AD 值转换为它所对应的电压值
  57           *
  58           */
  59          void old_main(void)
  60          {
  61   1        unsigned char ad; // 从 PCF8591 得到的 AD 值
  62   1        float v0 = 0;     // AD 值对应的电压
  63   1        /* 电压计算公式：V_i=(AD/2^n)V_ref
  64   1          （其中 n 为 ADC 位数，实验中的 PCF8591 是 8bit 的，n=256）*/
  65   1      
  66   1        LCD1602_Init();
  67   1        LCD1602_string(0, 0, "test");
  68   1      
  69   1        while (1)
  70   1        {
  71   2          // 一下过程参考第三种情况（连续读写）
  72   2          IIC_Start();
  73   2          IIC_Send_Byte(0x90);        // 写入控制字节（写入地址，指明设备）
  74   2                                      // 1001 开头，A2=A1=A1=0，写为低电平，0）
  75   2          if (IIC_Check_ACK() == ACK) // 如果应答（找到了设备）
  76   2          {
  77   3            IIC_Send_Byte(0x00);        // 写入控制字节（向该设备说明模式）
  78   3            if (IIC_Check_ACK() == ACK) // 如果应答
  79   3            {
  80   4              IIC_Start();
  81   4              IIC_Send_Byte(0x91);        // 读内容
  82   4                                          // 1001 开头，A2=A1=A1=0，读为高电平，1）
  83   4              if (IIC_Check_ACK() == ACK) // 如果应答，可以接收数据
  84   4              {
  85   5                ad = IIC_Read_Byte(); // 读出 AD 值
  86   5                IIC_Send_ACK(NACK);   // 不需要再接收了，返回非应答
  87   5      
  88   5                // AD 值转换为电压值 v0
  89   5                v0 = (ad / 256.0) * 5.0;
  90   5                v0 *= 100; // 放大100倍，方便显示
  91   5      
  92   5                // 用LCD1602显示
  93   5                LCD1602_2num(1, 5, (int)v0 / 100);
  94   5                LCD1602_char(1, 7, '.');
  95   5                LCD1602_2num(1, 8, (int)v0 % 100);
  96   5                LCD1602_char(1, 10, 'v');
  97   5              }
  98   4            }
  99   3          }
 100   2          IIC_End(); // 结束本次读取，发出中止信号
 101   2      
 102   2          DelayXms(100); // 等一会儿
 103   2        }
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    665    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
