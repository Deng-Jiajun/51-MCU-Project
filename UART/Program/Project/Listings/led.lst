C51 COMPILER V9.60.0.0   LED                                                               03/23/2022 23:11:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Source\led.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #include <reg51.h>
   2          #include "led.h"
   3          #include "delay.h"
   4          
   5          // LED 连到 P0 端口
   6          #define PORT P0
   7          
   8          // PORT 端口连 8 个 LED
   9          sbit LED0 = PORT ^ 0;
  10          sbit LED1 = PORT ^ 1;
  11          sbit LED2 = PORT ^ 2;
  12          sbit LED3 = PORT ^ 3;
  13          sbit LED4 = PORT ^ 4;
  14          sbit LED5 = PORT ^ 5;
  15          sbit LED6 = PORT ^ 6;
  16          sbit LED7 = PORT ^ 7;
  17          
  18          // 开/关 对应序号的灯（如果亮的就关掉，如果暗的就点亮）
  19          void SwitchLED(unsigned char index)
  20          {
  21   1          switch (index)
  22   1          {
  23   2          case 0:
  24   2              LED0 = ~LED0;
  25   2              break;
  26   2          case 1:
  27   2              LED1 = ~LED1;
  28   2              break;
  29   2          case 2:
  30   2              LED2 = ~LED2;
  31   2              break;
  32   2          case 3:
  33   2              LED3 = ~LED3;
  34   2              break;
  35   2          case 4:
  36   2              LED4 = ~LED4;
  37   2              break;
  38   2          case 5:
  39   2              LED5 = ~LED5;
  40   2              break;
  41   2          case 6:
  42   2              LED6 = ~LED6;
  43   2              break;
  44   2          case 7:
  45   2              LED7 = ~LED7;
  46   2              break;
  47   2          }
  48   1      }
  49          
  50          // 打开对应序号的灯
  51          void TurnOnLED(unsigned char index)
  52          {
  53   1          switch (index)
  54   1          {
C51 COMPILER V9.60.0.0   LED                                                               03/23/2022 23:11:56 PAGE 2   

  55   2          case 0:
  56   2              LED0 = 0;
  57   2              break;
  58   2          case 1:
  59   2              LED1 = 0;
  60   2              break;
  61   2          case 2:
  62   2              LED2 = 0;
  63   2              break;
  64   2          case 3:
  65   2              LED3 = 0;
  66   2              break;
  67   2          case 4:
  68   2              LED4 = 0;
  69   2              break;
  70   2          case 5:
  71   2              LED5 = 0;
  72   2              break;
  73   2          case 6:
  74   2              LED6 = 0;
  75   2              break;
  76   2          case 7:
  77   2              LED7 = 0;
  78   2              break;
  79   2          }
  80   1      }
  81          
  82          // 关闭对应序号的灯
  83          void TurnOffLED(unsigned char index)
  84          {
  85   1          switch (index)
  86   1          {
  87   2          case 0:
  88   2              LED0 = 1;
  89   2              break;
  90   2          case 1:
  91   2              LED1 = 1;
  92   2              break;
  93   2          case 2:
  94   2              LED2 = 1;
  95   2              break;
  96   2          case 3:
  97   2              LED3 = 1;
  98   2              break;
  99   2          case 4:
 100   2              LED4 = 1;
 101   2              break;
 102   2          case 5:
 103   2              LED5 = 1;
 104   2              break;
 105   2          case 6:
 106   2              LED6 = 1;
 107   2              break;
 108   2          case 7:
 109   2              LED7 = 1;
 110   2              break;
 111   2          }
 112   1      }
 113          
 114          // 逐位亮灭法
 115          void BitByBit(void)
 116          {
C51 COMPILER V9.60.0.0   LED                                                               03/23/2022 23:11:56 PAGE 3   

 117   1          // 陆续亮灭
 118   1          LED0 = 0;
 119   1          DelayXms(100);
 120   1          LED0 = 1;
 121   1      
 122   1          LED1 = 0;
 123   1          DelayXms(100);
 124   1          LED1 = 1;
 125   1      
 126   1          LED2 = 0;
 127   1          DelayXms(100);
 128   1          LED2 = 1;
 129   1      
 130   1          LED3 = 0;
 131   1          DelayXms(100);
 132   1          LED3 = 1;
 133   1      
 134   1          LED4 = 0;
 135   1          DelayXms(100);
 136   1          LED4 = 1;
 137   1      
 138   1          LED5 = 0;
 139   1          DelayXms(100);
 140   1          LED5 = 1;
 141   1      
 142   1          LED6 = 0;
 143   1          DelayXms(100);
 144   1          LED6 = 1;
 145   1      
 146   1          LED7 = 0;
 147   1          DelayXms(100);
 148   1          LED7 = 1;
 149   1      }
 150          
 151          // 数组控制法
 152          // 对应某位 0
 153          unsigned char LED_DATA[8] = {0xfe, 0xfd, 0xfb, 0xf7, 0xef, 0xdf, 0xbf, 0x7f};
 154          void ArrayControl(void)
 155          {
 156   1          unsigned char i;
 157   1          for (i = 0; i < 8; i++)
 158   1          {
 159   2              PORT = LED_DATA[i];
 160   2              DelayXms(100);
 161   2          }
 162   1      }
 163          
 164          // 逐位移位法
 165          void BitShift(void)
 166          {
 167   1          unsigned char temp = 0xfe; // 1111 1110
 168   1          unsigned char i = 0;
 169   1          for (; i < 8; i++)
 170   1          {
 171   2              PORT = temp;
 172   2              temp = (temp << 1) + 1; // 1111 1101 （+1 是因为低位补的是 0）
 173   2              DelayXms(100);
 174   2          }
 175   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   LED                                                               03/23/2022 23:11:56 PAGE 4   

   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
